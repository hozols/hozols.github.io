{"version":3,"file":"component---src-pages-index-jsx-3e641e20b5169246223b.js","mappings":"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","sources":["webpack://@kremalicious/portfolio/./src/components/atoms/ProjectImage.jsx","webpack://@kremalicious/portfolio/./src/components/atoms/SEO.jsx","webpack://@kremalicious/portfolio/./src/components/molecules/Repository.jsx","webpack://@kremalicious/portfolio/./src/components/molecules/Repository.module.css","webpack://@kremalicious/portfolio/./src/components/organisms/Repositories.jsx","webpack://@kremalicious/portfolio/./src/components/organisms/Repositories.module.css","webpack://@kremalicious/portfolio/./src/pages/index.jsx","webpack://@kremalicious/portfolio/./src/pages/index.module.css"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { projectImage as styleProjectImage } from './ProjectImage.module.css'\n\nexport default function ProjectImage({ image, alt, className }) {\n  return (\n    <GatsbyImage\n      className={`${styleProjectImage} ${className || ''}`}\n      backgroundColor=\"transparent\"\n      image={image}\n      alt={alt}\n      as=\"figure\"\n    />\n  )\n}\n\nProjectImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n\nexport const projectImage = graphql`\n  fragment ProjectImageFluid on ImageSharp {\n    gatsbyImageData(layout: CONSTRAINED, width: 1440, quality: 85)\n  }\n`\n\nexport const projectImageTeaser = graphql`\n  fragment ProjectImageTeaser on ImageSharp {\n    gatsbyImageData(layout: CONSTRAINED, width: 740, quality: 85)\n  }\n`\n\nexport const projectImageNav = graphql`\n  fragment ProjectImageNav on ImageSharp {\n    gatsbyImageData(layout: CONSTRAINED, width: 500, quality: 85)\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { useMeta } from '../../hooks/use-meta'\nimport { useResume } from '../../hooks/use-resume'\n\nconst MetaTags = ({ title, description, url, image }) => {\n  const { basics } = useResume()\n  const twitterHandle = basics.profiles.filter(\n    ({ network }) => network === 'Twitter'\n  )[0].username\n\n  return (\n    <Helmet\n      defaultTitle={`${basics.name.toLowerCase()} { ${basics.label.toLowerCase()} }`}\n      titleTemplate={`%s // ${basics.name.toLowerCase()} { ${basics.label.toLowerCase()} }`}\n      title={title}\n    >\n      <html lang=\"en\" />\n\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={`${basics.website}${image}`} />\n      <link rel=\"canonical\" href={url} />\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={`${basics.website}${image}`} />\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitterHandle} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={`${basics.website}${image}`} />\n    </Helmet>\n  )\n}\n\nMetaTags.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  url: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.object\n}\n\nSEO.propTypes = {\n  project: PropTypes.object\n}\n\nexport default function SEO({ project }) {\n  const meta = useMeta()\n  const { basics } = useResume()\n  const title = (project && project.title) || null\n  const description = (project && project.fields.excerpt) || meta.description\n  const image =\n    (project && project.img.childImageSharp.twitterImage.src) ||\n    meta.img.childImageSharp.resize.src\n  const url = (project && `${basics.website}${project.slug}`) || basics.website\n\n  return (\n    <MetaTags title={title} description={description} url={url} image={image} />\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Icon from '../atoms/Icon'\nimport { repo as styleRepo, repoTitle, meta } from './Repository.module.css'\n\nexport default function Repository({ repo }) {\n  const { name, full_name, description, html_url, homepage, stargazers_count } =\n    repo\n\n  const isExternal = !full_name.includes('kremalicious')\n\n  // for blog & portfolio and if there's no homepage, use github url\n  // else use homepage field\n  const repoLink =\n    name === 'blog' || name === 'portfolio' || !homepage || isExternal\n      ? html_url\n      : homepage\n\n  return (\n    <div className={styleRepo}>\n      <h1 className={repoTitle}>\n        <a href={repoLink}>{isExternal ? full_name : name}</a>\n      </h1>\n      <p>{description}</p>\n      <p className={meta}>\n        {name === 'portfolio' || name === 'blog'\n          ? null\n          : !isExternal &&\n            homepage && (\n              <a href={homepage}>\n                <Icon name=\"Compass\" /> More info\n              </a>\n            )}\n\n        <a href={html_url}>\n          <Icon name=\"GitHub\" /> GitHub\n        </a>\n\n        <a href={`${html_url}/stargazers`}>\n          <Icon name=\"Star\" /> {stargazers_count}\n        </a>\n      </p>\n    </div>\n  )\n}\n\nRepository.propTypes = {\n  repo: PropTypes.object.isRequired\n}\n","// extracted by mini-css-extract-plugin\nexport var repo = \"Repository-module--repo--fR8fo\";\nexport var repoTitle = \"Repository-module--repoTitle--vDe4G\";\nexport var meta = \"Repository-module--meta--1Kx-I\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Repository from '../molecules/Repository'\nimport { sectionTitle, repos as styleRepos } from './Repositories.module.css'\n\nRepositories.propTypes = {\n  repos: PropTypes.array\n}\n\nexport default function Repositories({ repos }) {\n  if (!repos) return null\n\n  return (\n    <>\n      <h2 className={sectionTitle}>Open Source Projects</h2>\n      <div className={styleRepos}>\n        {repos.map((repo) => (\n          <Repository key={repo.name} repo={repo} />\n        ))}\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var sectionTitle = \"Repositories-module--sectionTitle--9y47j\";\nexport var repos = \"Repositories-module--repos--cbcBi Layout-module--grid--3JhXz\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport SEO from '../components/atoms/SEO'\nimport ProjectImage from '../components/atoms/ProjectImage'\nimport { grid } from '../components/Layout.module.css'\nimport {\n  project as styleProject,\n  title as styleTitle,\n  imageCount as styleImageCount\n} from './index.module.css'\nimport Repositories from '../components/organisms/Repositories'\nimport Icon from '../components/atoms/Icon'\n\nfunction getImageCount(images, slug) {\n  let array = []\n  let slugWithoutSlashes = slug.replace(/\\//g, '')\n\n  images.map(\n    ({ node }) => node.name.includes(slugWithoutSlashes) && array.push(node)\n  )\n\n  return array.length\n}\n\nProject.propTypes = {\n  node: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    img: PropTypes.object.isRequired\n  }),\n  images: PropTypes.array.isRequired\n}\n\nfunction Project({ node, images }) {\n  const { slug, title, img } = node\n  const imageCount = getImageCount(images, slug)\n\n  return (\n    <Link to={slug} className={styleProject} key={slug}>\n      <h1 className={styleTitle}>{title}</h1>\n      <ProjectImage image={img.childImageSharp.gatsbyImageData} alt={title} />\n\n      {imageCount > 1 && (\n        <small\n          className={styleImageCount}\n          title={`${imageCount} project images`}\n        >\n          <Icon name=\"Image\" /> {imageCount}\n        </small>\n      )}\n    </Link>\n  )\n}\n\nHome.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n}\n\nexport default function Home({ data, pageContext }) {\n  const projects = data.allProjectsYaml.edges\n  const images = data.projectImageFiles.edges\n\n  return (\n    <>\n      <SEO />\n\n    <div className={grid}>\n        {projects.map(({ node }, i) => (\n          <Project key={i} node={node} images={images} />\n        ))}\n      </div>\n\n      <Repositories repos={pageContext.repos} />\n    </>\n  )\n}\n\nexport const IndexQuery = graphql`\n  query {\n    allProjectsYaml {\n      edges {\n        node {\n          title\n          slug\n          img {\n            childImageSharp {\n              ...ProjectImageTeaser\n            }\n          }\n        }\n      }\n    }\n\n    projectImageFiles: allFile(\n      filter: { absolutePath: { regex: \"/portfolio/\" } }\n    ) {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var title = \"index-module--title--FsR+z\";\nexport var project = \"index-module--project--GUCVc\";\nexport var imageCount = \"index-module--imageCount--ow956\";"],"names":["ProjectImage","image","alt","className","G","styleProjectImage","backgroundColor","as","MetaTags","title","description","url","basics","useResume","twitterHandle","profiles","filter","network","username","defaultTitle","name","toLowerCase","label","titleTemplate","lang","content","website","rel","href","property","SEO","project","meta","useMeta","fields","excerpt","img","childImageSharp","twitterImage","src","resize","slug","Repository","repo","full_name","html_url","homepage","stargazers_count","isExternal","includes","repoLink","Icon","Repositories","repos","map","key","Project","node","images","imageCount","array","slugWithoutSlashes","replace","push","length","getImageCount","Link","to","gatsbyImageData","Home","data","pageContext","projects","allProjectsYaml","edges","projectImageFiles","grid","i"],"sourceRoot":""}